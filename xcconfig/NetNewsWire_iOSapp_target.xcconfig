CODE_SIGN_IDENTITY= iPhone Developer
DEVELOPMENT_TEAM = M8L2WTLA8W
CODE_SIGN_STYLE = Automatic
ORGANIZATION_IDENTIFIER = com.ranchero
DEVELOPER_ENTITLEMENTS =
PROVISIONING_PROFILE_SPECIFIER =

// developers can locally override the Xcode settings for code signing
// by creating a DeveloperSettings.xcconfig file locally at the appropriate path
// This allows a pristine project to have code signing set up with the appropriate
// developer ID and certificates, and for dev to be able to have local settings
// without needing to check in anything into source control
//
// As an example, make a ../../SharedXcodeSettings/DeveloperSettings.xcconfig file and
// give it the contents
//
//    CODE_SIGN_IDENTITY[sdk=macosx*] = Mac Developer
//    CODE_SIGN_IDENTITY[sdk=iphoneos*] = iPhone Developer
//    CODE_SIGN_IDENTITY[sdk=iphonesimulator*] = iPhone Developer
//    DEVELOPMENT_TEAM = <Your Team ID>
//    ORGANIZATION_IDENTIFIER = <Your Domain Name Reversed>
//    CODE_SIGN_STYLE = Automatic
//    DEVELOPER_ENTITLEMENTS = -dev
//    PROVISIONING_PROFILE_SPECIFIER =
//
// And you should be able to build without code signing errors and without modifying
// the NetNewsWire Xcode project.
//
// Example:  if your NetNewsWire Xcode project file is at
//     /Users/Shared/git/NetNewsWire/NetNewsWire.xcodeproj
// create your DeveloperSettings.xcconfig file at
//     /Users/Shared/git/SharedXcodeSettings/DeveloperSettings.xcconfig
//

#include? "../../SharedXcodeSettings/ProjectSettings.xcconfig"
#include? "../../SharedXcodeSettings/DeveloperSettings.xcconfig"
#include "./common/NetNewsWire_ios_target_common.xcconfig"

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/Frameworks
INFOPLIST_FILE = iOS/Resources/Info.plist
CODE_SIGN_ENTITLEMENTS = iOS/Resources/NetNewsWire$(DEVELOPER_ENTITLEMENTS).entitlements
PRODUCT_BUNDLE_IDENTIFIER = $(ORGANIZATION_IDENTIFIER).NetNewsWire.iOS
PRODUCT_NAME = NetNewsWire
CLANG_ENABLE_MODULES = YES
SWIFT_OBJC_BRIDGING_HEADER = iOS/Resources/NetNewsWire-iOS-Bridging-Header.h
SWIFT_VERSION = 5.7
SUPPORTED_PLATFORMS = "iphoneos iphonesimulator";
SUPPORTS_MACCATALYST = NO;
SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD = NO;
SUPPORTS_XR_DESIGNED_FOR_IPHONE_IPAD = NO;
TARGETED_DEVICE_FAMILY = "1,2";
